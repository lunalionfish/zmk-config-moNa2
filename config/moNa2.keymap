#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

/*#define MOUSE 6*/

#define SCROLL 2

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W         &kp E         &kp R      &kp T                                         &kp Y      &kp U  &kp I      &kp O    &kp P
&kp A      &kp S         &lt 3 D       &kp F      &kp G        &trans            &trans         &kp H      &kp J  &lt 3 K    &kp L    &kp MINUS
&kp Z      &kp X         &kp C         &kp V      &kp B        &lt 4 COLON       &trans         &kp N      &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL  &kp LEFT_ALT  &kp LEFT_WIN  &lt 1 TAB  &lt 2 SPACE  &kp LEFT_SHIFT    &kp BACKSPACE  &kp ENTER                             &lt 2 CAPSLOCK
            >;

            sensor-bindings =
                <&scroll_up_down>,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        layer_1 {
            bindings = <
&kp GRAVE             &kp EXCLAMATION        &kp AT_SIGN       &kp TILDE          &trans                                &trans         &kp N7        &kp N8        &kp N9        &kp MINUS
&kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans  &trans            &trans      &kp COLON      &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL
&trans                &trans                 &trans            &trans             &trans  &trans            &trans      &kp SEMICOLON  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS
&kp ESCAPE            &trans                 &trans            &trans             &trans  &kp LEFT_SHIFT    &kp DELETE  &kp N0                                                   &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_2 {
            bindings = <
&trans                      &kp F2           &kp F4           &kp F5           &kp F12                                          &trans    &trans     &trans    &trans     &trans
&kp LCTRL                   &kp LALT         &kp LS(LCTRL)    &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))    &trans  &mkp MB4  &mkp LCLK  &kp UP    &mkp RCLK  &kp PIPE
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                  &trans  &kp HOME  &kp LEFT   &kp DOWN  &kp RIGHT  &kp END
&trans                      &trans           &trans           &trans           &trans        &kp LEFT_SHIFT             &trans  &trans                                    &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3 {
            bindings = <
&kp SPACE  &kp SPACE        &kp LG(TAB)  &kp SPACE    &trans                            &trans   &trans            &trans        &trans             &trans
&kp SPACE  &kp LS(LA(TAB))  &kp SPACE    &kp LA(TAB)  &kp SPACE  &trans       &trans    &trans   &kp LC(LG(LEFT))  &kp LS(UP)    &kp LC(LG(RIGHT))  &trans
&kp SPACE  &kp SPACE        &kp SPACE    &kp SPACE    &kp SPACE  &kp SPACE    &trans    &trans   &kp LS(LEFT)      &kp LS(DOWN)  &kp LS(RIGHT)      &trans
&kp ESC    &kp LCTRL        &kp LGUI     &trans       &trans     &kp LSHFT    &kp BSPC  &kp RET                                                     &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans                                                  &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
